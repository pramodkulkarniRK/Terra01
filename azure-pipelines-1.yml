trigger:
  branches:
    include:
      - main  # Adjust this to your main branch

pool:
  vmImage: 'ubuntu-latest'

variables:
  # Define your AWS credentials and region here or use Azure Key Vault to secure them
  AWS_ACCESS_KEY_ID: $(AWS_ACCESS_KEY_ID)
  AWS_SECRET_ACCESS_KEY: $(AWS_SECRET_ACCESS_KEY)
  AWS_REGION: 'us-east-1'  # Change to your desired region

stages:
  - stage: Terraform
    jobs:
      - job: Deploy
        steps:
          - checkout: self

          - task: Bash@3
            inputs:
              targetType: 'inline'
              script: |
                echo "Installing Terraform..."
                sudo apt-get update
                sudo apt-get install -y unzip
                wget https://releases.hashicorp.com/terraform/1.5.0/terraform_1.5.0_linux_amd64.zip  # Change version as needed
                unzip terraform_1.5.0_linux_amd64.zip
                sudo mv terraform /usr/local/bin/
                terraform --version

          - task: Bash@3
            inputs:
              targetType: 'inline'
              script: |
                echo "Setting up AWS credentials..."
                echo "[default]" > ~/.aws/credentials
                echo "aws_access_key_id = $(AWS_ACCESS_KEY_ID)" >> ~/.aws/credentials
                echo "aws_secret_access_key = $(AWS_SECRET_ACCESS_KEY)" >> ~/.aws/credentials
                echo "region = $(AWS_REGION)" >> ~/.aws/config

          - task: Bash@3
            inputs:
              targetType: 'inline'
              script: |
                echo "Initializing Terraform..."
                terraform init

          - task: Bash@3
            inputs:
              targetType: 'inline'
              script: |
                echo "Planning Terraform..."
                terraform plan

          - task: Bash@3
            inputs:
              targetType: 'inline'
              script: |
                echo "Applying Terraform..."
                terraform apply -auto-approve
